<?phpnamespace app\admin\controller\music;use app\common\controller\Backend;use think\Controller;use think\Request;use app\model\MusicType as MusicTypeModel;class Bgtype extends Backend{    protected $model = null;    public function _initialize()    {        parent::_initialize();        $this->model = new MusicTypeModel();    }    /**     * 添加     */    public function add()    {        if ($this->request->isPost())        {            $params = $this->request->post("row/a");            $params['type_cover'] = Config('upload_url_host').$params['type_cover'];            if ($params)            {                foreach ($params as $k => &$v)                {                    $v = is_array($v) ? implode(',', $v) : $v;                }                if ($params['mode'] == 'json')                {                    //JSON字段                    $fieldarr = $valuearr = [];                    $rowfield = $rowvalue = [];                    $field = $value = [];                    // key field                    $field = $this->request->post('field/a');                    $value = $this->request->post('value/a');                    //key row[field]                    if(isset($params['field'])){                        $rowfield = explode(',',$params['field']);                        $rowvalue = explode(',',$params['value']);                    }                    if(isset($field)){                        $field = array_merge($field,$rowfield);                        $value = array_merge($value,$rowvalue);                    }else{                        $field = $rowfield;                        $value = $rowvalue;                    }                    foreach ($field as $k => $v)                    {                        if ($v != '')                        {                            $fieldarr[] = $field[$k];                            $valuearr[] = $value[$k];                        }                    }                    $params['name'] = json_encode(array_combine($fieldarr, $valuearr), JSON_UNESCAPED_UNICODE);                    $params['create_time'] = time();                }                unset($params['mode']);                unset($params['field']);                unset($params['value']);                try                {                    //是否采用模型验证                    if ($this->modelValidate)                    {                        $name = basename(str_replace('\\', '/', get_class($this->model)));                        $validate = is_bool($this->modelValidate) ? ($this->modelSceneValidate ? $name . '.add' : true) : $this->modelValidate;                        $this->model->validate($validate);                    }                    $result = $this->model->save($params);                    if ($result !== false)                    {                        cache('musicType',null);                        $this->success();                    }                    else                    {                        $this->error($this->model->getError());                    }                }                catch (\think\exception\PDOException $e)                {                    $this->error($e->getMessage());                }            }            $this->error(__('Parameter %s can not be empty', ''));        }        return $this->view->fetch();    }    /**     * 编辑     */    public function edit($ids = NULL)    {        $row = $this->model->get($ids);        if (!$row)            $this->error(__('No Results were found'));        if ($this->request->isPost())        {            $params = $this->request->post("row/a");            if(strpos($params['type_cover'],Config('upload_url_host')) === false){                $params['type_cover'] = Config('upload_url_host').$params['type_cover'];            }            if ($params)            {                foreach ($params as $k => &$v)                {                    $v = is_array($v) ? implode(',', $v) : $v;                }                if ($params['mode'] == 'json')                {                    //JSON字段                    $fieldarr = $valuearr = [];                    $rowfield = $rowvalue = [];                    $field = $value = [];                    // key field                    $field = $this->request->post('field/a');                    $value = $this->request->post('value/a');                    if(isset($params['field'])){                        //key row[field]                        $rowfield = explode(',',$params['field']);                        $rowvalue = explode(',',$params['value']);                        if(isset($field)){                            $field = array_merge($field,$rowfield);                            $value = array_merge($value,$rowvalue);                        }else{                            $field = $rowfield;                            $value = $rowvalue;                        }                    }                    foreach ($field as $k => $v)                    {                        if ($v != '')                        {                            $fieldarr[] = $field[$k];                            $valuearr[] = $value[$k];                        }                    }                    $params['name'] = json_encode(array_combine($fieldarr, $valuearr), JSON_UNESCAPED_UNICODE);                    $params['update_time'] = time();                }                unset($params['mode']);                unset($params['field']);                unset($params['value']);                try                {                    //是否采用模型验证                    if ($this->modelValidate)                    {                        $name = basename(str_replace('\\', '/', get_class($this->model)));                        $validate = is_bool($this->modelValidate) ? ($this->modelSceneValidate ? $name . '.add' : true) : $this->modelValidate;                        $row->validate($validate);                    }                    $result = $row->save($params);                    if ($result !== false)                    {                        cache('musicType',null);                        $this->success();                    }                    else                    {                        $this->error($row->getError());                    }                }                catch (think\exception\PDOException $e)                {                    $this->error($e->getMessage());                }            }            $this->error(__('Parameter %s can not be empty', ''));        }        $this->view->assign("row", $row);        $this->view->assign("value", (array) json_decode($row->name, true));        return $this->view->fetch();    }}